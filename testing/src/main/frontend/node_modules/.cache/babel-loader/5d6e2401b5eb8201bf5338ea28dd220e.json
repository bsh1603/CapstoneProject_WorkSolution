{"ast":null,"code":"/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, T as TAU, m as toPercentage, n as toDimension, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  _update() {\n    let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n\n        this._notify(chart, anims, date, 'complete');\n\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n\n    return anims;\n  }\n\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n\n    this._getAnims(chart).items.push(...items);\n  }\n\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  start(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims) {\n      return;\n    }\n\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n\n    return true;\n  }\n\n  stop(chart) {\n    const anims = this._charts.get(chart);\n\n    if (!anims || !anims.items.length) {\n      return;\n    }\n\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n\n    anims.items = [];\n\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n\n}\n\nvar animator = /* #__PURE__ */new Animator();\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n\n};\n\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || elapsed < duration);\n\n    if (!this._active) {\n      this._target[prop] = to;\n\n      this._notify(true);\n\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = elapsed / duration % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({\n        res,\n        rej\n      });\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n\n}\n\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n\n      if (!isObject(cfg)) {\n        return;\n      }\n\n      const resolved = {};\n\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {});\n    }\n\n    return animations;\n  }\n\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n\n    return animations;\n  }\n\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  let options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex) {\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n\n    if (positive && value > 0 || !positive && value < 0) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {\n    chart,\n    _cachedMeta: meta\n  } = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {\n    iScale,\n    vScale,\n    index: datasetIndex\n  } = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {\n      [iAxis]: index,\n      [vAxis]: value\n    } = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n  keys: getSortedDatasetIndices(chart, true),\n  values: null\n};\n\nclass DatasetController {\n  static defaults = {};\n  static datasetElementType = null;\n  static dataElementType = null;\n\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale ? meta.vScale : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  _destroy() {\n    const meta = this._cachedMeta;\n\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    this._resyncElements(resetNewElements);\n\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  parse(start, count) {\n    const {\n      _cachedMeta: meta,\n      _data: data\n    } = this;\n    const {\n      iScale,\n      _stacked\n    } = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n\n          prev = cur;\n        }\n      }\n\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n\n    return parsed;\n  }\n\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {\n      mode\n    });\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n\n    const otherScale = this._getOtherScale(scale);\n\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    const {\n      min: otherMin,\n      max: otherMax\n    } = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n\n      if (sorted) {\n        break;\n      }\n    }\n\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n\n    return values;\n  }\n\n  getMaxOverflow() {\n    return false;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  update(mode) {}\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || elements.length - start;\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n\n      if (element.hidden) {\n        continue;\n      }\n\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  _resolveElementOptions(elementType) {\n    let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n    let index = arguments.length > 2 ? arguments[2] : undefined;\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n\n    const context = () => this.getContext(index, active);\n\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n\n    if (cached) {\n      return cached;\n    }\n\n    let options;\n\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n\n    const animations = new Animations(chart, options && options.animations);\n\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {\n      sharedOptions,\n      includeOptions\n    };\n  }\n\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: !active && this.getSharedOptions(options) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  _insertElements(start, count) {\n    let resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = arr => {\n      arr.length += count;\n\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {}\n\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n\n    meta.data.splice(start, count);\n  }\n\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n\n    const newCount = arguments.length - 2;\n\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n\n}\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n\n  const {\n    start,\n    end,\n    reverse,\n    top,\n    bottom\n  } = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, _ref, ratio) {\n  let {\n    inflateAmount\n  } = _ref;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nclass BarController extends DatasetController {\n  static id = 'bar';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true\n      }\n    }\n  };\n\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const {\n      xAxisKey = 'x',\n      yAxisKey = 'y'\n    } = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n\n    return parsed;\n  }\n\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  getMaxOverflow() {\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {\n      iScale,\n      vScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      index,\n      _cachedMeta: {\n        vScale\n      }\n    } = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n\n    const ruler = this._getRuler();\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n        base,\n        head: base\n      } : this._calculateBarValuePixels(i);\n\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  _getStacks(last, dataIndex) {\n    const {\n      iScale\n    } = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type).filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = meta => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n        stacks.push(meta.stack);\n      }\n\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n\n    const index = name !== undefined ? stacks.indexOf(name) : -1;\n    return index === -1 ? stacks.length - 1 : index;\n  }\n\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  _calculateBarValuePixels(index) {\n    const {\n      _cachedMeta: {\n        vScale,\n        _stacked\n      },\n      options: {\n        base: baseValue,\n        minBarLength\n      }\n    } = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n      center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n\nclass BubbleController extends DatasetController {\n  static id = 'bubble';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n\n    return parsed;\n  }\n\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n\n    return parsed;\n  }\n\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n\n    return max > 0 && max;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    if (values.$shared) {\n      values = Object.assign({}, values, {\n        $shared: false\n      });\n    }\n\n    const radius = values.radius;\n\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX,\n    ratioY,\n    offsetX,\n    offsetY\n  };\n}\n\nclass DoughnutController extends DatasetController {\n  static id = 'doughnut';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    spacing: 0,\n    indexAxis: 'r'\n  };\n  static descriptors = {\n    _scriptable: name => name !== 'spacing',\n    _indexable: name => name !== 'spacing'\n  };\n  static overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle,\n                  color\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = i => +data[i];\n\n      if (isObject(data[start])) {\n        const {\n          key = 'value'\n        } = this._parsing;\n\n        getter = i => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n\n        const rotation = controller._getRotation();\n\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min\n    };\n  }\n\n  update(mode) {\n    const chart = this.chart;\n    const {\n      chartArea\n    } = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n    const chartWeight = this._getRingWeight(this.index);\n\n    const {\n      circumference,\n      rotation\n    } = this._getRotationExtents();\n\n    const {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    } = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n\n    const circumference = this._getCircumference();\n\n    if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    let startAngle = this._getRotation();\n\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n\n    return max;\n  }\n\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n\n}\n\nclass LineController extends DatasetController {\n  static id = 'line';\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n  };\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category'\n      },\n      _value_: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      dataset: line,\n      data: points = [],\n      _dataset\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n\n    const {\n      sharedOptions,\n      includeOptions\n    } = this._getSharedOptions(start, mode);\n\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n\n}\n\nclass PolarAreaController extends DatasetController {\n  static id = 'polarArea';\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n  };\n  static overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle,\n                  color\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n\n            return [];\n          }\n\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n\n      }\n    },\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {\n      min: Number.POSITIVE_INFINITY,\n      max: Number.NEGATIVE_INFINITY\n    };\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - radiusLength * this.index;\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n  }\n\n}\n\nclass PieController extends DoughnutController {\n  static id = 'pie';\n  static defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n  };\n}\n\nclass RadarController extends DatasetController {\n  static id = 'radar';\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    }\n  };\n  static overrides = {\n    aspectRatio: 1,\n    scales: {\n      r: {\n        type: 'radialLinear'\n      }\n    }\n  };\n\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n}\n\nclass ScatterController extends DatasetController {\n  static id = 'scatter';\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n  static overrides = {\n    interaction: {\n      mode: 'point'\n    },\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {\n      xScale,\n      yScale\n    } = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {\n      data: points = []\n    } = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n\n    let {\n      start,\n      count\n    } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n      const {\n        dataset: line,\n        _dataset\n      } = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {\n      showLine\n    } = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {\n      iScale,\n      vScale,\n      _stacked,\n      _dataset\n    } = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {\n      spanGaps,\n      segment\n    } = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n\nclass DateAdapterBase {\n  /**\n  * Override default date adapter methods.\n  * Accepts type parameter to define options type.\n  * @example\n  * Chart._adapters._date.override<{myAdapterOption: string}>({\n  *   init() {\n  *     console.log(this.options.myAdapterOption);\n  *   }\n  * })\n  */\n  static override(members) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  constructor(options) {\n    this.options = options || {};\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  init() {}\n\n  formats() {\n    return abstract();\n  }\n\n  parse() {\n    return abstract();\n  }\n\n  format() {\n    return abstract();\n  }\n\n  add() {\n    return abstract();\n  }\n\n  diff() {\n    return abstract();\n  }\n\n  startOf() {\n    return abstract();\n  }\n\n  endOf() {\n    return abstract();\n  }\n\n}\n\nvar adapters = {\n  _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {\n    controller,\n    data,\n    _sorted\n  } = metaset;\n  const iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {\n      index,\n      data\n    } = metasets[i];\n    const {\n      lo,\n      hi\n    } = binarySearch(metasets[i], axis, value, intersect);\n\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function (element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {\n      startAngle,\n      endAngle\n    } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {\n      angle\n    } = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    });\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element,\n        datasetIndex,\n        index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element,\n        datasetIndex,\n        index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(meta => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element,\n            datasetIndex: meta.index,\n            index\n          });\n        }\n      });\n      return elements;\n    },\n\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (let i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n\n  }\n};\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({\n      position: pos,\n      options: {\n        stack,\n        stackWeight = 1\n      }\n    } = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n\n  for (const wrap of layouts) {\n    const {\n      stack,\n      pos,\n      stackWeight\n    } = wrap;\n\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n\n    const _stack = stacks[stack] || (stacks[stack] = {\n      count: 0,\n      placed: 0,\n      weight: 0,\n      size: 0\n    });\n\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {\n    vBoxMaxWidth,\n    hBoxMaxHeight\n  } = params;\n  let i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {\n      fullSize\n    } = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {\n    pos,\n    box\n  } = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    const stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(pos => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    const {\n      same,\n      other\n    } = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {\n    x,\n    y\n  } = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {\n      count: 1,\n      placed: 0,\n      weight: 1\n    };\n    const weight = layout.stackWeight / stack.weight || 1;\n\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height1 = chartArea.h * weight;\n      const width1 = stack.size || box.width;\n\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n      }\n\n      stack.start = x;\n      stack.placed += height1;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, layout => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n\n  releaseContext(context) {\n    return false;\n  }\n\n  addEventListener(chart, type, listener) {}\n\n  removeEventListener(chart, type, listener) {}\n\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  isAttached(canvas) {\n    return true;\n  }\n\n  updateConfig(config) {}\n\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nconst eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {\n    x,\n    y\n  } = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n\n  const container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled(event => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  releaseContext(context) {\n    const canvas = context.canvas;\n\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach(prop => {\n      const value = initial[prop];\n\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach(key => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n\n    return !!(container && container.isConnected);\n  }\n\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nclass Element {\n  static defaults = {};\n  static defaultRoutes = undefined;\n  active = false;\n\n  tooltipPosition(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  getProps(props, final) {\n    const anims = this.$animations;\n\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this;\n    }\n\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n\n}\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n\n  const tickLength = scale._tickSize();\n\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nconst reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, cache => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {\n    top,\n    left,\n    bottom,\n    right,\n    chart\n  } = scale;\n  const {\n    chartArea,\n    scales\n  } = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID1 = Object.keys(position)[0];\n      const value1 = position[positionAxisID1];\n      titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX,\n    titleY,\n    maxWidth,\n    rotation\n  };\n}\n\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  parse(raw, index) {\n    return raw;\n  }\n\n  getUserBounds() {\n    let {\n      _userMin,\n      _userMax,\n      _suggestedMin,\n      _suggestedMax\n    } = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n\n  getMinMax(canStack) {\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {\n        min,\n        max\n      };\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  getTicks() {\n    return this.ticks;\n  }\n\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    const {\n      beginAtZero,\n      grace,\n      ticks: tickOpts\n    } = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n\n  determineDataLimits() {}\n\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n\n  buildTicks() {\n    return [];\n  }\n\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n\n  afterAutoSkip() {}\n\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {\n      chart,\n      options: {\n        ticks: tickOpts,\n        title: titleOpts,\n        grid: gridOpts\n      }\n    } = this;\n\n    const display = this._isVisible();\n\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      if (tickOpts.display && this.ticks.length) {\n        const {\n          first,\n          last,\n          widest,\n          highest\n        } = this._getLabelSizes();\n\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {\n      ticks: {\n        align,\n        padding\n      },\n      position\n    } = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n\n  isHorizontal() {\n    const {\n      axis,\n      position\n    } = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  _computeLabelSizes(ticks, length) {\n    const {\n      ctx,\n      _longestTextCache: caches\n    } = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {\n        data: {},\n        gc: []\n      };\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = idx => ({\n      width: widths[idx] || 0,\n      height: heights[idx] || 0\n    });\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights\n    };\n  }\n\n  getLabelForValue(value) {\n    return value;\n  }\n\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n\n  getValueForPixel(pixel) {}\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  getBaseValue() {\n    const {\n      min,\n      max\n    } = this;\n    return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n  }\n\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n\n    return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {\n      grid,\n      position,\n      border\n    } = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n\n    const alignBorderValue = function (pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID1 = Object.keys(position)[0];\n        const value1 = position[positionAxisID1];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {\n      position,\n      ticks: optionTicks\n    } = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {\n      align,\n      crossAlign,\n      padding,\n      mirror\n    } = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret1 = this._getYAxisLabelAlignment(tl);\n\n      textAlign = ret1.textAlign;\n      x = ret1.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID1 = Object.keys(position)[0];\n        const value1 = position[positionAxisID1];\n        x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n      }\n\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n\n        if (mirror) {\n          textOffset *= -1;\n        }\n\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += lineHeight / 2 * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n          case 'middle':\n            top -= height / 2;\n            break;\n\n          case 'bottom':\n            top -= height;\n            break;\n        }\n\n        switch (textAlign) {\n          case 'center':\n            left -= width / 2;\n            break;\n\n          case 'right':\n            left -= width;\n            break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {\n      position,\n      ticks\n    } = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {\n      position,\n      ticks: {\n        crossAlign,\n        mirror,\n        padding\n      }\n    } = this.options;\n\n    const labelSizes = this._getLabelSizes();\n\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= widest / 2;\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {\n      textAlign,\n      x\n    };\n  }\n\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {\n        top: 0,\n        left: this.left,\n        bottom: chart.height,\n        right: this.right\n      };\n    }\n\n    if (position === 'top' || position === 'bottom') {\n      return {\n        top: this.top,\n        left: 0,\n        bottom: this.bottom,\n        right: chart.width\n      };\n    }\n  }\n\n  drawBackground() {\n    const {\n      ctx,\n      options: {\n        backgroundColor\n      },\n      left,\n      top,\n      width,\n      height\n    } = this;\n\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n\n    return 0;\n  }\n\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine({\n            x: item.x1,\n            y: item.y1\n          }, {\n            x: item.x2,\n            y: item.y2\n          }, item);\n        }\n\n        if (grid.drawTicks) {\n          drawLine({\n            x: item.tx1,\n            y: item.ty1\n          }, {\n            x: item.tx2,\n            y: item.ty2\n          }, {\n            color: item.tickColor,\n            width: item.tickWidth,\n            borderDash: item.tickBorderDash,\n            borderDashOffset: item.tickBorderDashOffset\n          });\n        }\n      }\n    }\n  }\n\n  drawBorder() {\n    const {\n      chart,\n      ctx,\n      options: {\n        border,\n        grid\n      }\n    } = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n\n    if (!axisWidth) {\n      return;\n    }\n\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  drawTitle() {\n    const {\n      ctx,\n      options: {\n        position,\n        title,\n        reverse\n      }\n    } = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: chartArea => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: chartArea => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: chartArea => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  get(id) {\n    return this.items[id];\n  }\n\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  add() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    this._each('register', args);\n  }\n\n  remove() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    this._each('unregister', args);\n  }\n\n  addControllers() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    this._each('register', args, this.controllers);\n  }\n\n  addElements() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    this._each('register', args, this.elements);\n  }\n\n  addPlugins() {\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      args[_key5] = arguments[_key5];\n    }\n\n    this._each('register', args, this.plugins);\n  }\n\n  addScales() {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    this._each('register', args, this.scales);\n  }\n\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  removeControllers() {\n    for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      args[_key7] = arguments[_key7];\n    }\n\n    this._each('unregister', args, this.controllers);\n  }\n\n  removeElements() {\n    for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      args[_key8] = arguments[_key8];\n    }\n\n    this._each('unregister', args, this.elements);\n  }\n\n  removePlugins() {\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      args[_key9] = arguments[_key9];\n    }\n\n    this._each('unregister', args, this.plugins);\n  }\n\n  removeScales() {\n    for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    this._each('unregister', args, this.scales);\n  }\n\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n\n      if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n\n    return this.plugins;\n  }\n\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n\n    return item;\n  }\n\n}\n\nvar registry = /* #__PURE__ */new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n\n      this._notify(this._init, chart, 'uninstall');\n    }\n\n    return result;\n  }\n\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n\n}\n\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n\n  for (let i1 = 0; i1 < local.length; i1++) {\n    const plugin = local[i1];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {\n    plugins,\n    localIds\n  };\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, _ref2, options, all) {\n  let {\n    plugins,\n    localIds\n  } = _ref2;\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n\n    if (opts === null) {\n      continue;\n    }\n\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {\n        plugin,\n        local: localIds[id]\n      }, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, _ref3, opts, context) {\n  let {\n    plugin,\n    local\n  } = _ref3;\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{\n      axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n\n    this._resolverCache.clear();\n  }\n\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n  }\n\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n  }\n\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n  }\n\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n  }\n\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n\n    let cache = _scopeCache.get(mainScope);\n\n    if (!cache || resetCache) {\n      cache = new Map();\n\n      _scopeCache.set(mainScope, cache);\n    }\n\n    return cache;\n  }\n\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {\n      options,\n      type\n    } = this;\n\n    const cache = this._cachedScopes(mainScope, resetCache);\n\n    const cached = cache.get(keyLists);\n\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n\n    return array;\n  }\n\n  chartOptionScopes() {\n    const {\n      options,\n      type\n    } = this;\n    return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n      type\n    }, defaults, descriptors];\n  }\n\n  resolveNamedOptions(scopes, names, context) {\n    let prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n    const result = {\n      $shared: true\n    };\n    const {\n      resolver,\n      subPrefixes\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n\n    return result;\n  }\n\n  createResolver(scopes, context) {\n    let prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n    let descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n    const {\n      resolver\n    } = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n  }\n\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nconst hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {\n    isScriptable,\n    isIndexable\n  } = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n\n    if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar version = \"4.0.1\";\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nconst instances = {};\n\nconst getChart = key => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter(c => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n\n  for (const key of keys) {\n    const intKey = +key;\n\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {\n    xScale,\n    yScale\n  } = meta;\n\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register() {\n    registry.add(...arguments);\n    invalidatePlugins();\n  }\n\n  static unregister() {\n    registry.remove(...arguments);\n    invalidatePlugins();\n  }\n\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {\n      options: {\n        aspectRatio,\n        maintainAspectRatio\n      },\n      width,\n      height,\n      _aspectRatio\n    } = this;\n\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {\n        width,\n        height\n      };\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {\n      size: newSize\n    });\n    callback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(Object.keys(scaleOpts).map(id => {\n        const scaleOptions = scaleOpts[id];\n        const axis = determineAxis(id, scaleOptions);\n        const isRadial = axis === 'r';\n        const isHorizontal = axis === 'x';\n        return {\n          options: scaleOptions,\n          dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n          dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n        };\n      }));\n    }\n\n    each(items, item => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, scale => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n\n      metasets.splice(numData, numMeta - numData);\n    }\n\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  _removeUnreferencedMetasets() {\n    const {\n      _metasets: metasets,\n      data: {\n        datasets\n      }\n    } = this;\n\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n\n        meta = this.getDatasetMeta(i);\n      }\n\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {\n          datasetElementType,\n          dataElementType\n        } = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n\n    return newControllers;\n  }\n\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  reset() {\n    this._resetElements();\n\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n\n    this._checkEventBindings();\n\n    this._updateHiddenIndices();\n\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {\n        controller\n      } = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n    this._updateLayout(minPadding);\n\n    if (!animsDisabled) {\n      each(newControllers, controller => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    this.notifyPlugins('afterUpdate', {\n      mode\n    });\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    const {\n      _active,\n      _lastEvent\n    } = this;\n\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  _updateScales() {\n    each(this.scales, scale => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  _updateHiddenIndices() {\n    const {\n      _hiddenIndices\n    } = this;\n    const changes = this._getUniformDataChanges() || [];\n\n    for (const {\n      method,\n      start,\n      count\n    } of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n\n    const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n\n    const changeSet = makeSet(0);\n\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n\n    return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n      method: a[1],\n      start: +a[2],\n      count: +a[3]\n    }));\n  }\n\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, box => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n\n      if (box.configure) {\n        box.configure();\n      }\n\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {\n      mode,\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1) {\n      this._updateDataset(i1, isFunction(mode) ? mode({\n        datasetIndex: i1\n      }) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {\n      mode\n    });\n  }\n\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {\n      meta,\n      index,\n      mode,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({\n        chart: this\n      });\n    }\n  }\n\n  draw() {\n    let i;\n\n    if (this._resizeBeforeDraw) {\n      const {\n        width,\n        height\n      } = this._resizeBeforeDraw;\n\n      this._resize(width, height);\n\n      this._resizeBeforeDraw = null;\n    }\n\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const layers = this._layers;\n\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {\n      cancelable: true\n    }) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {\n      chart: this,\n      type: 'chart'\n    }));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {\n        visible\n      });\n      this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {\n      canvas,\n      ctx\n    } = this;\n\n    this._stop();\n\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image() {\n    return this.canvas.toDataURL(...arguments);\n  }\n\n  bindEvents() {\n    this.bindUserEvents();\n\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, type => _add(type, listener));\n  }\n\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached;\n\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      this._stop();\n\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(_ref4 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref4;\n      const meta = this.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n\n    const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  _handleEvent(e, replay, inChartArea) {\n    const {\n      _active: lastActive = [],\n      options\n    } = this;\n    const useFinalPosition = replay;\n\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n    const isClick = _isClickEvent(e);\n\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed || replay) {\n      this._active = active;\n\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n\n}\n\nfunction invalidatePlugins() {\n  return each(Chart.instances, chart => chart._plugins.invalidate());\n}\n\nvar Chart$1 = Chart;\n\nfunction clipArc(ctx, element, endAngle) {\n  const {\n    startAngle,\n    pixelMargin,\n    x,\n    y,\n    outerRadius,\n    innerRadius\n  } = element;\n  let angleMargin = pixelMargin / outerRadius; // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\n\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2); // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n\n  const computeOuterLimit = val => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\n\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\n\n\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {\n    x,\n    y,\n    startAngle: start,\n    pixelMargin,\n    innerRadius: innerR\n  } = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {\n    outerStart,\n    outerEnd,\n    innerStart,\n    innerEnd\n  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle); // The corner segment from point 2 to point 3\n\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    } // The line from point 3 to point 4\n\n\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y); // The corner segment from point 4 to point 5\n\n    if (innerEnd > 0) {\n      const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    } // The inner arc from point 5 to point b to point 6\n\n\n    const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true); // The corner segment from point 6 to point 7\n\n    if (innerStart > 0) {\n      const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    } // The line from point 7 to point 8\n\n\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y); // The corner segment from point 8 to point 1\n\n    if (outerStart > 0) {\n      const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference\n  } = element;\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  const {\n    fullCircles,\n    startAngle,\n    circumference,\n    options\n  } = element;\n  const {\n    borderWidth,\n    borderJoinStyle\n  } = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nclass ArcElement extends Element {\n  static id = 'arc';\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {\n      angle,\n      distance\n    } = getAngleFromPoint(point, {\n      x: chartX,\n      y: chartY\n    });\n    const {\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius,\n      circumference\n    } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return betweenAngles && withinRadius;\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      startAngle,\n      endAngle,\n      innerRadius,\n      outerRadius\n    } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n    const {\n      offset,\n      spacing\n    } = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {\n      options,\n      circumference\n    } = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n    ctx.restore();\n  }\n\n}\n\nfunction setStyle(ctx, options) {\n  let style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  let params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const count = points.length;\n  const {\n    start: paramsStart = 0,\n    end: paramsEnd = count - 1\n  } = params;\n  const {\n    start: segmentStart,\n    end: segmentEnd\n  } = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  const {\n    points,\n    options\n  } = line;\n  const {\n    count,\n    start,\n    loop,\n    ilen\n  } = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {\n    move = true,\n    reverse\n  } = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {\n    count,\n    start,\n    ilen\n  } = pathVars(points, segment, params);\n  const {\n    move = true,\n    reverse\n  } = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {\n    segments,\n    options\n  } = line;\n\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n\n    if (segmentMethod(ctx, line, segment, {\n      start,\n      end: start + count - 1\n    })) {\n      ctx.closePath();\n    }\n\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nclass LineElement extends Element {\n  static id = 'line';\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  static descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash' && name !== 'fill'\n  };\n\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n\n    const segments = _boundSegments(this, {\n      property,\n      start: value,\n      end: value\n    });\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n\n    const _interpolate = _getInterpolationMethod(options);\n\n    let i, ilen;\n\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {\n        start,\n        end\n      } = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n\n    return result.length === 1 ? result[0] : result;\n  }\n\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  path(ctx, start, count) {\n    const segments = this.segments;\n\n    const segmentMethod = _getSegmentMethod(this);\n\n    let loop = this._loop;\n    start = start || 0;\n    count = count || this.points.length - start;\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {\n        start,\n        end: start + count - 1\n      });\n    }\n\n    return !!loop;\n  }\n\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {\n    [axis]: value\n  } = el.getProps([axis], useFinalPosition);\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nclass PointElement extends Element {\n  static id = 'point';\n  /**\n  * @type {any}\n  */\n\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n  /**\n  * @type {any}\n  */\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y\n    } = this.getProps(['x', 'y'], useFinalPosition);\n    return {\n      x,\n      y\n    };\n  }\n\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx, area) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {}; // @ts-expect-error Fallbacks should never be hit in practice\n\n    return options.radius + options.hitRadius;\n  }\n\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {\n    x,\n    y,\n    base,\n    width,\n    height\n  } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left,\n    top,\n    right,\n    bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {\n    enableBorderRadius\n  } = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  let refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nclass BarElement extends Element {\n  static id = 'bar';\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {\n      inflateAmount,\n      options: {\n        borderColor,\n        backgroundColor\n      }\n    } = this;\n    const {\n      inner,\n      outer\n    } = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      horizontal\n    } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nconst BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n]; // Border colors with 50% transparency\n\nconst BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction createDefaultDatasetColorizer() {\n  return (dataset, i) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\n\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n  return dataset => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\n\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n  return dataset => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\n\nfunction getColorizer(type) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n\n  return createDefaultDatasetColorizer();\n}\n\nfunction containsColorsDefinitions(descriptors) {\n  let k;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true\n  },\n\n  beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      type,\n      options: {\n        elements\n      },\n      data: {\n        datasets\n      }\n    } = chart.config;\n\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n\n    const colorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {\n      x: pointAx,\n      y: pointAy\n    } = data[a];\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex1],\n            x: avgX\n          });\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({ ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(dataset => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {\n    iScale\n  } = meta;\n  const {\n    min,\n    max,\n    minDefined,\n    maxDefined\n  } = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start,\n    count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {\n        _data,\n        indexAxis\n      } = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function () {\n            return this._decimated;\n          },\n          set: function (d) {\n            this._data = d;\n          }\n        });\n      }\n\n      let decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {\n      start,\n      end\n    } = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n\n  return parts;\n}\n\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property,\n    start,\n    end\n  };\n}\n\nfunction _pointsFromSegments(boundary, line) {\n  const {\n    x = null,\n    y = null\n  } = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(_ref5 => {\n    let {\n      start,\n      end\n    } = _ref5;\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y\n      });\n      points.push({\n        x: last.x,\n        y\n      });\n    } else if (x !== null) {\n      points.push({\n        x,\n        y: first.y\n      });\n      points.push({\n        x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    const point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {\n      tension: 0\n    },\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n\n  return pixel;\n}\n\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  return value;\n}\n\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {\n    scale,\n    index,\n    line\n  } = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {\n      first,\n      last,\n      point\n    } = findPoint(line, sourcePoint, 'x');\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push(...postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first,\n    last,\n    point\n  };\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    bounds = bounds || {\n      start: 0,\n      end: TAU\n    };\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {\n      x,\n      y,\n      radius\n    } = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n\n}\n\nfunction _getTarget(source) {\n  const {\n    chart,\n    fill,\n    line\n  } = source;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction computeLinearBoundary(source) {\n  const {\n    scale = {},\n    fill\n  } = source;\n\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {\n    scale,\n    fill\n  } = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n\n  const value = _getTargetValue(fill, scale, start);\n\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n\n  const {\n    line,\n    scale,\n    axis\n  } = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {\n    above = color,\n    below = color\n  } = fillOption || {};\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale,\n      axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {\n    line,\n    target,\n    above,\n    below,\n    area,\n    scale\n  } = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line,\n      target,\n      color: above,\n      scale,\n      property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n\n  fill(ctx, {\n    line,\n    target,\n    color: below,\n    scale,\n    property\n  });\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {\n    segments,\n    points\n  } = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n\n  for (const segment of segments) {\n    const {\n      start,\n      end\n    } = segment;\n    const firstPoint = points[start];\n\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n\n    lineLoop = !!target.pathSegment(ctx, segment, {\n      move: lineLoop\n    });\n\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {\n    line,\n    target,\n    property,\n    color,\n    scale\n  } = cfg;\n\n  const segments = _segments(line, target, property);\n\n  for (const {\n    source: src,\n    target: tgt,\n    start,\n    end\n  } of segments) {\n    const {\n      style: {\n        backgroundColor = color\n      } = {}\n    } = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {\n        move: lineLoop,\n        reverse: true\n      });\n      loop = lineLoop && targetLoop;\n\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {\n    top,\n    bottom\n  } = scale.chart.chartArea;\n  const {\n    property,\n    start,\n    end\n  } = bounds || {};\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {\n    boxHeight = fontSize,\n    boxWidth = fontSize\n  } = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {\n      options,\n      ctx\n    } = this;\n\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      boxWidth,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {\n      ctx,\n      maxWidth,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {\n        left: 0,\n        top,\n        row,\n        width: itemWidth,\n        height: itemHeight\n      };\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {\n      ctx,\n      maxHeight,\n      options: {\n        labels: {\n          padding\n        }\n      }\n    } = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const {\n        itemWidth,\n        itemHeight\n      } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({\n          width: currentColWidth,\n          height: currentColHeight\n        });\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      hitboxes[i] = {\n        left,\n        top: currentColHeight,\n        col,\n        width: itemWidth,\n        height: itemHeight\n      };\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({\n      width: currentColWidth,\n      height: currentColHeight\n    });\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n\n    const titleHeight = this._computeTitleHeight();\n\n    const {\n      legendHitBoxes: hitboxes,\n      options: {\n        align,\n        labels: {\n          padding\n        },\n        rtl\n      }\n    } = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n    if (this.isHorizontal()) {\n      let row = 0;\n\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n      for (const hitbox1 of hitboxes) {\n        if (hitbox1.col !== col) {\n          col = hitbox1.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n\n        hitbox1.top = top;\n        hitbox1.left += this.left + padding;\n        hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n        top += hitbox1.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  _draw() {\n    const {\n      options: opts,\n      columnSizes,\n      lineWidths,\n      ctx\n    } = this;\n    const {\n      align,\n      labels: labelOpts\n    } = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {\n      padding\n    } = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {\n      boxWidth,\n      boxHeight,\n      itemHeight\n    } = getBoxSize(labelOpts, fontSize);\n\n    const drawLegendBox = function (x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function (x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    const isHorizontal = this.isHorizontal();\n\n    const titleHeight = this._computeTitleHeight();\n\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor;\n      ctx.fillStyle = legendItem.fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  handleEvent(e) {\n    const opts = this.options;\n\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth,\n    itemHeight\n  };\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: ctx => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {\n          labels: {\n            usePointStyle,\n            pointStyle,\n            textAlign,\n            color,\n            useBorderRadius,\n            borderRadius\n          }\n        } = chart.legend.options;\n        return chart._getSortedDatasetMetas().map(meta => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n\n    },\n    title: {\n      color: ctx => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: name => !name.startsWith('on'),\n    labels: {\n      _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n    }\n  }\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      options\n    } = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n\n      maxWidth = bottom - top;\n    }\n\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n\n    const {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    } = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY]\n    });\n  }\n\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  const {\n    element,\n    datasetIndex,\n    index\n  } = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {\n    label,\n    value\n  } = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {\n    body,\n    footer,\n    title\n  } = tooltip;\n  const {\n    boxWidth,\n    boxHeight\n  } = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  let widthPadding = 0;\n\n  const maxLineWidth = function (line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, bodyItem => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width,\n    height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  const {\n    y,\n    height\n  } = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {\n    x,\n    width\n  } = size;\n  const caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {\n    x,\n    width\n  } = size;\n  const {\n    width: chartWidth,\n    chartArea: {\n      left,\n      right\n    }\n  } = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {\n    x,\n    width\n  } = size;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {\n    y,\n    height\n  } = size;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {\n    caretSize,\n    caretPadding,\n    cornerRadius\n  } = options;\n  const {\n    xAlign,\n    yAlign\n  } = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {\n    topLeft,\n    topRight,\n    bottomLeft,\n    bottomRight\n  } = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  beforeTitle: noop,\n\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n\n  afterTitle: noop,\n  beforeBody: noop,\n  beforeLabel: noop,\n\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n\n    const value = tooltipItem.formattedValue;\n\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n\n    return label;\n  },\n\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n\n  afterLabel: noop,\n  afterBody: noop,\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nclass Tooltip extends Element {\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n  }\n\n  getBody(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const bodyItems = [];\n    each(tooltipItems, context => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n  }\n\n  getFooter(tooltipItems, options) {\n    const {\n      callbacks\n    } = options;\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    each(tooltipItems, context => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {\n        chart: this.chart,\n        tooltip: this,\n        replay\n      });\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      caretSize,\n      cornerRadius\n    } = options;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    const {\n      x: ptX,\n      y: ptY\n    } = tooltipPoint;\n    const {\n      width,\n      height\n    } = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + height / 2;\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n\n      y3 = y1;\n    }\n\n    return {\n      x1,\n      x2,\n      x3,\n      y1,\n      y2,\n      y3\n    };\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {\n      body\n    } = this;\n    const {\n      bodySpacing,\n      bodyAlign,\n      displayColors,\n      boxHeight,\n      boxWidth,\n      boxPadding\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function (line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {\n      xAlign,\n      yAlign\n    } = this;\n    const {\n      x,\n      y\n    } = pt;\n    const {\n      width,\n      height\n    } = tooltipSize;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n      if (!position) {\n        return;\n      }\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(_ref6 => {\n      let {\n        datasetIndex,\n        index\n      } = _ref6;\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  handleEvent(e, replay) {\n    let inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    const positionChanged = this._positionChanged(active, e);\n\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      return lastActive;\n    }\n\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  _positionChanged(active, e) {\n    const {\n      caretX,\n      caretY,\n      options\n    } = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n\n}\n\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart,\n        options\n      });\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', { ...args,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n\n  return value;\n}\n\nclass CategoryScale extends Scale {\n  static id = 'category';\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n\n    if (added.length) {\n      const labels = this.getLabels();\n\n      for (const {\n        index,\n        label\n      } of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n\n      this._addedLabels = [];\n    }\n\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({\n        value\n      });\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {\n    bounds,\n    step,\n    min,\n    max,\n    precision,\n    count,\n    maxTicks,\n    maxDigits,\n    includeBounds\n  } = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {\n    min: rmin,\n    max: rmax\n  } = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref7) {\n  let {\n    horizontal,\n    minRotation\n  } = _ref7;\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {\n      beginAtZero\n    } = this.options;\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let {\n      min,\n      max\n    } = this;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {\n      maxTicksLimit,\n      stepSize\n    } = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n}\n\nclass LinearScale extends LinearScaleBase {\n  static id = 'linear';\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n    const tickFont = this._resolveTickFontOptions(0);\n\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n\n}\n\nconst log10Floor = v => Math.floor(log10(v));\n\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n\n  return Math.min(rangeExp, log10Floor(min));\n}\n\nfunction generateTicks(generationOptions, _ref8) {\n  let {\n    min,\n    max\n  } = _ref8;\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n\n  while (value < max) {\n    ticks.push({\n      value,\n      major: isMajor(value),\n      significand\n    });\n\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand\n  });\n  return ticks;\n}\n\nclass LogarithmicScale extends Scale {\n  static id = 'logarithmic';\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => min = minDefined ? min : v;\n\n    const setMax = v => max = maxDefined ? max : v;\n\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n\n    if (max <= 0) {\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n\n    return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n\n}\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {\n    ctx,\n    options: {\n      pointLabels\n    }\n  } = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {\n      x,\n      y,\n      textAlign,\n      left,\n      top,\n      right,\n      bottom\n    } = scale._pointLabelItems[i];\n    const {\n      backdropColor\n    } = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {\n    ctx\n  } = scale;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {\n    color,\n    lineWidth\n  } = gridLineOpts;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nclass RadialLinearScale extends LinearScaleBase {\n  static id = 'radialLinear';\n  static defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    grid: {\n      circular: false\n    },\n    startAngle: 0,\n    ticks: {\n      showLabelBackdrop: true,\n      callback: Ticks.formatters.numeric\n    },\n    pointLabels: {\n      backdropColor: undefined,\n      backdropPadding: 2,\n      display: true,\n      font: {\n        size: 10\n      },\n\n      callback(label) {\n        return label;\n      },\n\n      padding: 5,\n      centerPointLabels: false\n    }\n  };\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {\n      min,\n      max\n    } = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    }).filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter) {\n    let additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n\n  drawBackground() {\n    const {\n      backgroundColor,\n      grid: {\n        circular\n      }\n    } = this.options;\n\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {\n      angleLines,\n      grid,\n      border\n    } = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {\n          color,\n          lineWidth\n        } = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  drawBorder() {}\n\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color\n      });\n    });\n    ctx.restore();\n  }\n\n  drawTitle() {}\n\n}\n\nconst INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nconst UNITS = /* #__PURE__ */Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {\n    parser,\n    round,\n    isoWeekday\n  } = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {\n      lo,\n      hi\n    } = _lookup(timestamps, time);\n\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nclass TimeScale extends Scale {\n  static id = 'time';\n  static defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      unit: false,\n      round: false,\n      isoWeekday: false,\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      source: 'auto',\n      callback: false,\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = this.getUserBounds();\n\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n\n    return {\n      min,\n      max\n    };\n  }\n\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  initOffsets() {\n    let timestamps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {\n      start,\n      end,\n      factor: 1 / (start + 1 + end)\n    };\n  }\n\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return callback(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n      h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n    };\n  }\n\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n    const size = this._getLabelSize(exampleLabel);\n\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return this._cache.data = metas[0].controller.getAllParsedValues(this);\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return this._cache.data = this.normalize(timestamps);\n  }\n\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n  }\n\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n\n}\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'pos', val));\n    }\n\n    ({\n      pos: prevSource,\n      time: prevTarget\n    } = table[lo]);\n    ({\n      pos: nextSource,\n      time: nextTarget\n    } = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({\n        lo,\n        hi\n      } = _lookupByKey(table, 'time', val));\n    }\n\n    ({\n      time: prevSource,\n      pos: prevTarget\n    } = table[lo]);\n    ({\n      time: nextSource,\n      pos: nextTarget\n    } = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n  static id = 'timeseries';\n  static defaults = TimeScale.defaults;\n\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  buildLookupTable(timestamps) {\n    const {\n      min,\n      max\n    } = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  }\n\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n\n}\n\nvar TimeSeriesScale$1 = TimeSeriesScale;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale$1\n});\nconst registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart$1 as Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale$1 as TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"mappings":"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","names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","datasetElementType","dataElementType","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","new","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","grouped","numbers","overrides","_index_","offset","grid","_value_","beginAtZero","iAxisKey","vAxisKey","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","animateRotate","animateScale","spacing","descriptors","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","borderWidth","onClick","e","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","arc","metaData","formatNumber","locale","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","LineController","showLine","spanGaps","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","segment","animated","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","angleLines","display","circular","pointLabels","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","interaction","registry","getElement","abstract","Error","DateAdapterBase","override","members","prototype","init","formats","format","diff","startOf","endOf","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","defaultRoutes","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","getValueForPixel","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","merge","routeDefaults","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","version","invalidatePlugins","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","capBezierPoints","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","createDefaultDatasetColorizer","createDoughnutDatasetColorizer","createPolarAreaDatasetColorizer","getColorizer","containsColorsDefinitions","k","_args","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","configurable","enumerable","d","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","startsWith","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","logarithmic","_zero","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","adapters","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.animator.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.animation.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.animations.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.datasetController.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\controllers\\controller.bar.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\controllers\\controller.bubble.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\controllers\\controller.doughnut.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\controllers\\controller.line.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\controllers\\controller.polarArea.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\controllers\\controller.pie.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\controllers\\controller.radar.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\controllers\\controller.scatter.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.adapters.ts","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.interaction.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.layouts.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\platform\\platform.base.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\platform\\platform.basic.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\platform\\platform.dom.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\platform\\index.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.element.ts","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.scale.autoskip.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.scale.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.typedRegistry.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.registry.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.plugins.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.config.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\core\\core.controller.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\elements\\element.arc.ts","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\elements\\element.line.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\elements\\element.point.ts","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\elements\\element.bar.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.colors.ts","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.decimation.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.segment.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.helper.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.options.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.stack.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\simpleArc.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.drawing.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\index.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.legend.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.title.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.subtitle.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\plugins\\plugin.tooltip.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\scales\\scale.category.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\scales\\scale.linearbase.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\scales\\scale.linear.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\scales\\scale.logarithmic.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\scales\\scale.radialLinear.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\scales\\scale.time.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\scales\\scale.timeseries.js","C:\\Capstone_Project\\testing\\src\\main\\frontend\\node_modules\\chart.js\\src\\index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import(\"./core.animation\").default } Animation\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing';\nimport {resolve} from '../helpers/helpers.options';\nimport {color as helpersColor} from '../helpers/helpers.color';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator';\nimport Animation from './core.animation';\nimport defaults from './core.defaults';\nimport {isArray, isObject} from '../helpers/helpers.core';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations';\nimport defaults from './core.defaults';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection';\nimport {createContext, sign} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"./core.scale\").default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController';\nimport {valueOrDefault} from '../helpers/helpers.core';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController';\nimport {_parseObjectDataRadialScale} from '../helpers/index';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController';\nimport {isNullOrUndef} from '../helpers';\nimport {isNumber} from '../helpers/helpers.math';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../../types/basic';\nimport type {ChartOptions} from '../../types';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection';\nimport {getRelativePosition} from '../helpers/helpers.dom';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math';\nimport {_isPointInArea} from '../helpers';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import(\"./core.element\").default}} InteractionItem\n * @typedef { import(\"../../types\").Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core';\nimport {toPadding} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import(\"../core/core.config\").default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom';\nimport {throttled} from '../helpers/helpers.extras';\nimport {isNullOrUndef} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"../core/core.controller\").default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers';\nimport BasePlatform from './platform.base';\nimport BasicPlatform from './platform.basic';\nimport DomPlatform from './platform.dom';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../../types/basic';\nimport type {Point} from '../../types/geometric';\nimport type {Animation} from '../../types/animation';\nimport {isNumber} from '../helpers/helpers.math';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\nimport {_factorize} from '../helpers/helpers.math';\n\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options';\nimport {autoSkip} from './core.scale.autoskip';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers';\nimport defaults, {overrides} from './core.defaults';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController';\nimport Element from './core.element';\nimport Scale from './core.scale';\nimport TypedRegistry from './core.typedRegistry';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core';\n\n/**\n * @typedef { import(\"./core.controller\").default } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../plugins/plugin.tooltip\").default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import(\"./core.config\").default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator';\nimport defaults, {overrides} from './core.defaults';\nimport Interaction from './core.interaction';\nimport layouts from './core.layouts';\nimport {_detectPlatform} from '../platform';\nimport PluginService from './core.plugins';\nimport registry from './core.registry';\nimport Config, {determineAxis, getIndexAxis} from './core.config';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras';\n\n/**\n * @typedef { import('../../types').ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../../types').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../../types').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math';\nimport {_readValueToProps} from '../helpers/helpers.options';\nimport type {ArcOptions, Point} from '../../types';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve';\nimport {valueOrDefault} from '../helpers';\n\n/**\n * @typedef { import(\"./element.point\").default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas';\nimport {\n  type CartesianParsedData,\n  type ChartArea,\n  type Point,\n  type PointHoverOptions,\n  type PointOptions,\n} from '../../types';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element';\nimport {isObject, _isBetween, _limitValue} from '../helpers';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import type {Chart, ChartConfiguration, ChartDataset} from '../types';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n}\n\ntype DatasetColorizer = (dataset: ChartDataset, i: number) => void;\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction createDefaultDatasetColorizer() {\n  return (dataset: ChartDataset, i: number) => {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n  };\n}\n\nfunction createDoughnutDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n  };\n}\n\nfunction createPolarAreaDatasetColorizer() {\n  let i = 0;\n\n  return (dataset: ChartDataset) => {\n    dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n  };\n}\n\nfunction getColorizer(type: string) {\n  if (type === 'doughnut' || type === 'pie') {\n    return createDoughnutDatasetColorizer();\n  } else if (type === 'polarArea') {\n    return createPolarAreaDatasetColorizer();\n  }\n  return createDefaultDatasetColorizer();\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n  },\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      type,\n      options: {elements},\n      data: {datasets}\n    } = chart.config as ChartConfiguration;\n\n    if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n      return;\n    }\n\n    const colorizer: DatasetColorizer = getColorizer(type);\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {isArray} from '../../helpers';\nimport {_pointsFromSegments} from './filler.segment';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core';\n\n/**\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.line').default } LineElement\n * @typedef { import('../../../types').FillTarget } FillTarget\n * @typedef { import('../../../types').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nimport {LineElement} from '../../elements';\nimport {_isBetween} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers';\nimport {_createBoundaryLine} from './filler.helper';\nimport {_getTargetPixel, _getTargetValue} from './filler.options';\nimport {_buildStackLine} from './filler.target.stack';\nimport {simpleArc} from './simpleArc';\n\n/**\n * @typedef { import('../../core/core.controller').default } Chart\n * @typedef { import('../../core/core.scale').default } Scale\n * @typedef { import('../../elements/element.point').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment';\nimport {_getTarget} from './filler.target';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line';\nimport {_drawfill} from './filler.drawing';\nimport {_shouldApplyFill} from './filler.helper';\nimport {_decodeFill, _resolveTarget} from './filler.options';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults';\nimport Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras';\nimport {toTRBLCorners} from '../helpers/helpers.options';\n\n/**\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element';\nimport layouts from '../core/core.layouts';\nimport {PI, isArray, toPadding, toFont} from '../helpers';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras';\nimport {renderText} from '../helpers/helpers.canvas';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title';\nimport layouts from '../core/core.layouts';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations';\nimport Element from '../core/core.element';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math';\nimport {createContext, drawPoint} from '../helpers';\n\n/**\n * @typedef { import(\"../platform/platform.base\").Chart } Chart\n * @typedef { import(\"../../types\").ChartEvent } ChartEvent\n * @typedef { import(\"../../types\").ActiveElement } ActiveElement\n * @typedef { import(\"../core/core.interaction\").InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {formatNumber} from '../helpers/helpers.intl';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {toRadians} from '../helpers';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core';\nimport {formatNumber} from '../helpers/helpers.intl';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math';\nimport LinearScaleBase from './scale.linearbase';\nimport Ticks from '../core/core.ticks';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math';\nimport Scale from '../core/core.scale';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection';\n\n/**\n * @typedef { import(\"../core/core.adapters\").TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import(\"../core/core.adapters\").DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time';\nimport {_lookupByKey} from '../helpers/helpers.collection';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers';\nexport * from './core';\nexport * from './elements';\nexport * from './platform';\nexport * from './plugins';\nexport * from './scales';\n\nimport * as controllers from './controllers';\nimport * as elements from './elements';\nimport * as plugins from './plugins';\nimport * as scales from './scales';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"]},"metadata":{},"sourceType":"module"}