{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { updateCSS, removeCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport getScrollBarSize from \"rc-util/es/getScrollBarSize\";\nimport { isBodyOverflowing } from \"./util\";\nvar UNIQUE_ID = \"rc-util-locker-\".concat(Date.now());\nvar uuid = 0;\nexport default function useScrollLocker(lock) {\n  var mergedLock = !!lock;\n\n  var _React$useState = React.useState(function () {\n    uuid += 1;\n    return \"\".concat(UNIQUE_ID, \"_\").concat(uuid);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      id = _React$useState2[0];\n\n  useLayoutEffect(function () {\n    if (mergedLock) {\n      var scrollbarSize = getScrollBarSize();\n      var isOverflow = isBodyOverflowing();\n      updateCSS(\"\\nhtml body {\\n  overflow-y: hidden;\\n  \".concat(isOverflow ? \"width: calc(100% - \".concat(scrollbarSize, \"px);\") : '', \"\\n}\"), id);\n    } else {\n      removeCSS(id);\n    }\n\n    return function () {\n      removeCSS(id);\n    };\n  }, [mergedLock, id]);\n}","map":{"version":3,"names":["_slicedToArray","React","updateCSS","removeCSS","useLayoutEffect","getScrollBarSize","isBodyOverflowing","UNIQUE_ID","concat","Date","now","uuid","useScrollLocker","lock","mergedLock","_React$useState","useState","_React$useState2","id","scrollbarSize","isOverflow"],"sources":["C:/Capstone_Project/testing/src/main/frontend/node_modules/@rc-component/portal/es/useScrollLocker.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { updateCSS, removeCSS } from \"rc-util/es/Dom/dynamicCSS\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport getScrollBarSize from \"rc-util/es/getScrollBarSize\";\nimport { isBodyOverflowing } from \"./util\";\nvar UNIQUE_ID = \"rc-util-locker-\".concat(Date.now());\nvar uuid = 0;\nexport default function useScrollLocker(lock) {\n  var mergedLock = !!lock;\n\n  var _React$useState = React.useState(function () {\n    uuid += 1;\n    return \"\".concat(UNIQUE_ID, \"_\").concat(uuid);\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      id = _React$useState2[0];\n\n  useLayoutEffect(function () {\n    if (mergedLock) {\n      var scrollbarSize = getScrollBarSize();\n      var isOverflow = isBodyOverflowing();\n      updateCSS(\"\\nhtml body {\\n  overflow-y: hidden;\\n  \".concat(isOverflow ? \"width: calc(100% - \".concat(scrollbarSize, \"px);\") : '', \"\\n}\"), id);\n    } else {\n      removeCSS(id);\n    }\n\n    return function () {\n      removeCSS(id);\n    };\n  }, [mergedLock, id]);\n}"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,2BAArC;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SAASC,iBAAT,QAAkC,QAAlC;AACA,IAAIC,SAAS,GAAG,kBAAkBC,MAAlB,CAAyBC,IAAI,CAACC,GAAL,EAAzB,CAAhB;AACA,IAAIC,IAAI,GAAG,CAAX;AACA,eAAe,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;EAC5C,IAAIC,UAAU,GAAG,CAAC,CAACD,IAAnB;;EAEA,IAAIE,eAAe,GAAGd,KAAK,CAACe,QAAN,CAAe,YAAY;IAC/CL,IAAI,IAAI,CAAR;IACA,OAAO,GAAGH,MAAH,CAAUD,SAAV,EAAqB,GAArB,EAA0BC,MAA1B,CAAiCG,IAAjC,CAAP;EACD,CAHqB,CAAtB;EAAA,IAIIM,gBAAgB,GAAGjB,cAAc,CAACe,eAAD,EAAkB,CAAlB,CAJrC;EAAA,IAKIG,EAAE,GAAGD,gBAAgB,CAAC,CAAD,CALzB;;EAOAb,eAAe,CAAC,YAAY;IAC1B,IAAIU,UAAJ,EAAgB;MACd,IAAIK,aAAa,GAAGd,gBAAgB,EAApC;MACA,IAAIe,UAAU,GAAGd,iBAAiB,EAAlC;MACAJ,SAAS,CAAC,2CAA2CM,MAA3C,CAAkDY,UAAU,GAAG,sBAAsBZ,MAAtB,CAA6BW,aAA7B,EAA4C,MAA5C,CAAH,GAAyD,EAArH,EAAyH,KAAzH,CAAD,EAAkID,EAAlI,CAAT;IACD,CAJD,MAIO;MACLf,SAAS,CAACe,EAAD,CAAT;IACD;;IAED,OAAO,YAAY;MACjBf,SAAS,CAACe,EAAD,CAAT;IACD,CAFD;EAGD,CAZc,EAYZ,CAACJ,UAAD,EAAaI,EAAb,CAZY,CAAf;AAaD"},"metadata":{},"sourceType":"module"}