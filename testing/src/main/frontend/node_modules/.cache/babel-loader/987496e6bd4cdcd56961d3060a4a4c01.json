{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport var ANT_MARK = 'internalMark';\n\nvar LocaleProvider = function LocaleProvider(props) {\n  var _props$locale = props.locale,\n      locale = _props$locale === void 0 ? {} : _props$locale,\n      children = props.children,\n      _ANT_MARK__ = props._ANT_MARK__;\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(_ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale') : void 0;\n  }\n\n  React.useEffect(function () {\n    changeConfirmLocale(locale && locale.Modal);\n    return function () {\n      changeConfirmLocale();\n    };\n  }, [locale]);\n  var getMemoizedContextValue = React.useMemo(function () {\n    return _extends(_extends({}, locale), {\n      exist: true\n    });\n  }, [locale]);\n  return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    value: getMemoizedContextValue\n  }, children);\n};\n\nexport default LocaleProvider;","map":{"version":3,"names":["_extends","React","warning","changeConfirmLocale","LocaleContext","ANT_MARK","LocaleProvider","props","_props$locale","locale","children","_ANT_MARK__","process","env","NODE_ENV","useEffect","Modal","getMemoizedContextValue","useMemo","exist","createElement","Provider","value"],"sources":["C:/Capstone_Project/testing/src/main/frontend/node_modules/antd/es/locale-provider/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport warning from '../_util/warning';\nimport { changeConfirmLocale } from '../modal/locale';\nimport LocaleContext from './context';\nexport var ANT_MARK = 'internalMark';\nvar LocaleProvider = function LocaleProvider(props) {\n  var _props$locale = props.locale,\n    locale = _props$locale === void 0 ? {} : _props$locale,\n    children = props.children,\n    _ANT_MARK__ = props._ANT_MARK__;\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(_ANT_MARK__ === ANT_MARK, 'LocaleProvider', '`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale') : void 0;\n  }\n  React.useEffect(function () {\n    changeConfirmLocale(locale && locale.Modal);\n    return function () {\n      changeConfirmLocale();\n    };\n  }, [locale]);\n  var getMemoizedContextValue = React.useMemo(function () {\n    return _extends(_extends({}, locale), {\n      exist: true\n    });\n  }, [locale]);\n  return /*#__PURE__*/React.createElement(LocaleContext.Provider, {\n    value: getMemoizedContextValue\n  }, children);\n};\nexport default LocaleProvider;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAO,IAAIC,QAAQ,GAAG,cAAf;;AACP,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;EAClD,IAAIC,aAAa,GAAGD,KAAK,CAACE,MAA1B;EAAA,IACEA,MAAM,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,EAA3B,GAAgCA,aAD3C;EAAA,IAEEE,QAAQ,GAAGH,KAAK,CAACG,QAFnB;EAAA,IAGEC,WAAW,GAAGJ,KAAK,CAACI,WAHtB;;EAIA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzCF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,OAAO,CAACS,WAAW,KAAKN,QAAjB,EAA2B,gBAA3B,EAA6C,+GAA7C,CAA/C,GAA+M,KAAK,CAApN;EACD;;EACDJ,KAAK,CAACc,SAAN,CAAgB,YAAY;IAC1BZ,mBAAmB,CAACM,MAAM,IAAIA,MAAM,CAACO,KAAlB,CAAnB;IACA,OAAO,YAAY;MACjBb,mBAAmB;IACpB,CAFD;EAGD,CALD,EAKG,CAACM,MAAD,CALH;EAMA,IAAIQ,uBAAuB,GAAGhB,KAAK,CAACiB,OAAN,CAAc,YAAY;IACtD,OAAOlB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKS,MAAL,CAAT,EAAuB;MACpCU,KAAK,EAAE;IAD6B,CAAvB,CAAf;EAGD,CAJ6B,EAI3B,CAACV,MAAD,CAJ2B,CAA9B;EAKA,OAAO,aAAaR,KAAK,CAACmB,aAAN,CAAoBhB,aAAa,CAACiB,QAAlC,EAA4C;IAC9DC,KAAK,EAAEL;EADuD,CAA5C,EAEjBP,QAFiB,CAApB;AAGD,CAtBD;;AAuBA,eAAeJ,cAAf"},"metadata":{},"sourceType":"module"}