{"ast":null,"code":"import { selector } from \"recoil\";\nimport { workState } from \"./atom\";\nimport { chartState, userState, barState } from \"./atom\";\nimport axios from \"axios\";\n\nconst getWorkTime = workTime => {\n  const [day, time] = workTime.split(\"T\");\n  const [hour, min] = time.split(\"-\");\n  const workMin = (Number(hour) - 9) * 60 + Number(min);\n  return [day, workMin];\n};\n\nexport const objWorkState = selector({\n  key: \"objWorkState\",\n  get: _ref => {\n    let {\n      get\n    } = _ref;\n    const workArray = get(workState);\n    return workArray.reduce((acc, cur) => {\n      const [day, workMin] = getWorkTime(cur.work_time);\n      return { ...acc,\n        [day]: workMin\n      };\n    }, {});\n  }\n});\nexport const chartDataState = selector({\n  key: \"chartDataState\",\n  get: async _ref2 => {\n    let {\n      get\n    } = _ref2;\n    const user = get(userState);\n    const response = await axios.get(`/api/work/chart/${user.id}`);\n    const chartState = response.data;\n    const labels = [...Object.keys(chartState)];\n    labels.sort();\n    labels.push(\"\");\n    const values = [...labels.map(key => chartState[key]), 0];\n    const data = {\n      labels: labels,\n      datasets: [{\n        label: \"일별 일한 시간\",\n        data: values,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"rgba(75,192,192,1)\"\n      }]\n    };\n    return data;\n  }\n});\nexport const barDataState = selector({\n  key: \"barDataState\",\n  get: async _ref3 => {\n    let {\n      get\n    } = _ref3;\n    const user = get(userState);\n    const response = await axios.get(`/api/work/month/chart/${user.id}`);\n    const barState = response.data;\n    const labels = [...Object.keys(barState)];\n    labels.sort(); //    labels.push(\"\")\n\n    const values = [...labels.map(key => barState[key])];\n    console.log(\"ttt\", user);\n    const data = {\n      labels: labels,\n      datasets: [{\n        label: \"월별 일한 시간\",\n        data: values,\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        borderColor: \"rgba(75,192,192,1)\"\n      }]\n    };\n    return data;\n  }\n});\nexport const stockDataState = selector({\n  key: \"stockDataState\",\n  get: async _ref4 => {\n    let {\n      get\n    } = _ref4;\n    const user = get(userState);\n    const teamId = await (await axios.get(`/api/member/myteam/${user.id}`)).data;\n    const stockData = await (await axios.get(`/api/stock/${teamId}`)).data;\n    return stockData;\n  }\n});\nexport const memberDataState = selector({\n  key: \"memberDataState\",\n  get: async _ref5 => {\n    let {\n      get\n    } = _ref5;\n    const user = get(userState);\n    const response = await axios.get(`/api/member/${user.id}`);\n    const memberData = response.data;\n    return memberData;\n  }\n});","map":{"version":3,"names":["selector","workState","chartState","userState","barState","axios","getWorkTime","workTime","day","time","split","hour","min","workMin","Number","objWorkState","key","get","workArray","reduce","acc","cur","work_time","chartDataState","user","response","id","data","labels","Object","keys","sort","push","values","map","datasets","label","fill","backgroundColor","borderColor","barDataState","console","log","stockDataState","teamId","stockData","memberDataState","memberData"],"sources":["C:/Capstone_Project/testing/src/main/frontend/src/recoil/selector.js"],"sourcesContent":["import { selector } from \"recoil\";\nimport { workState } from \"./atom\";\nimport { chartState, userState, barState } from \"./atom\";\nimport axios from \"axios\";\n\nconst getWorkTime = (workTime) => {\n  const [day, time] = workTime.split(\"T\");\n  const [hour, min] = time.split(\"-\");\n  const workMin = (Number(hour) - 9) * 60 + Number(min);\n  return [day, workMin];\n};\n\nexport const objWorkState = selector({\n  key: \"objWorkState\",\n  get: ({ get }) => {\n    const workArray = get(workState);\n    return workArray.reduce((acc, cur) => {\n      const [day, workMin] = getWorkTime(cur.work_time);\n      return { ...acc, [day]: workMin };\n    }, {});\n  },\n});\n\nexport const chartDataState = selector({\n  key: \"chartDataState\",\n  get: async ({ get }) => {\n    const user = get(userState);\n    const response = await axios.get(`/api/work/chart/${user.id}`);\n    const chartState = response.data;\n    const labels = [...Object.keys(chartState)];\n    labels.sort();\n    labels.push(\"\");\n    const values = [...labels.map((key) => chartState[key]), 0];\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"일별 일한 시간\",\n          data: values,\n          fill: true,\n          backgroundColor: \"rgba(75,192,192,0.2)\",\n          borderColor: \"rgba(75,192,192,1)\",\n        },\n      ],\n    };\n    return data;\n  },\n});\n\nexport const barDataState = selector({\n  key: \"barDataState\",\n  get: async ({ get }) => {\n    const user = get(userState);\n    const response = await axios.get(`/api/work/month/chart/${user.id}`);\n    const barState = response.data;\n    const labels = [...Object.keys(barState)];\n    labels.sort();\n    //    labels.push(\"\")\n    const values = [...labels.map((key) => barState[key])];\n    console.log(\"ttt\", user);\n\n    const data = {\n      labels: labels,\n      datasets: [\n        {\n          label: \"월별 일한 시간\",\n          data: values,\n          fill: true,\n          backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n          borderColor: \"rgba(75,192,192,1)\",\n        },\n      ],\n    };\n    return data;\n  },\n});\n\nexport const stockDataState = selector({\n  key: \"stockDataState\",\n  get: async ({ get }) => {\n    const user = get(userState);\n    const teamId = await (await axios.get(`/api/member/myteam/${user.id}`)).data;\n    const stockData = await (await axios.get(`/api/stock/${teamId}`)).data;\n    return stockData;\n  },\n});\n\nexport const memberDataState = selector({\n  key: \"memberDataState\",\n  get: async ({ get }) => {\n    const user = get(userState);\n    const response = await axios.get(`/api/member/${user.id}`);\n    const memberData = response.data;\n\n    return memberData;\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}