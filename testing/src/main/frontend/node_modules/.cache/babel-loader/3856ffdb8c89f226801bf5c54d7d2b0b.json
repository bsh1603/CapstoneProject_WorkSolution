{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { useCallback, useMemo, useState } from 'react';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Radio from '../../radio';\nimport warning from '../../_util/warning'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_COLUMN = {};\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\nvar EMPTY_LIST = [];\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n      preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n      selectedRowKeys = _ref.selectedRowKeys,\n      defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n      getCheckboxProps = _ref.getCheckboxProps,\n      onSelectionChange = _ref.onChange,\n      onSelect = _ref.onSelect,\n      onSelectAll = _ref.onSelectAll,\n      onSelectInvert = _ref.onSelectInvert,\n      onSelectNone = _ref.onSelectNone,\n      onSelectMultiple = _ref.onSelectMultiple,\n      selectionColWidth = _ref.columnWidth,\n      selectionType = _ref.type,\n      selections = _ref.selections,\n      fixed = _ref.fixed,\n      customizeRenderCell = _ref.renderCell,\n      hideSelectAll = _ref.hideSelectAll,\n      _ref$checkStrictly = _ref.checkStrictly,\n      checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n\n  var prefixCls = config.prefixCls,\n      data = config.data,\n      pageData = config.pageData,\n      getRecordByKey = config.getRecordByKey,\n      getRowKey = config.getRowKey,\n      expandType = config.expandType,\n      childrenColumnName = config.childrenColumnName,\n      tableLocale = config.locale,\n      getPopupContainer = config.getPopupContainer; // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(selectedRowKeys || defaultSelectedRowKeys || EMPTY_LIST, {\n    value: selectedRowKeys\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = useCallback(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]); // Update cache with selectedKeys\n\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n\n  var _useMemo = useMemo(function () {\n    return checkStrictly ? {\n      keyEntities: null\n    } : convertDataToEntities(data, {\n      externalGetKey: getRowKey,\n      childrenPropName: childrenColumnName\n    });\n  }, [data, getRowKey, checkStrictly, childrenColumnName]),\n      keyEntities = _useMemo.keyEntities; // Get flatten data\n\n\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]); // Get all checkbox props\n\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      process.env.NODE_ENV !== \"production\" ? warning(!('checked' in checkboxProps || 'defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.') : void 0;\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n\n  var _useMemo2 = useMemo(function () {\n    if (checkStrictly) {\n      return [mergedSelectedKeys || [], []];\n    }\n\n    var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n      _useMemo3 = _slicedToArray(_useMemo2, 2),\n      derivedSelectedKeys = _useMemo3[0],\n      derivedHalfSelectedKeys = _useMemo3[1];\n\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // Reset if rowSelection reset\n\n\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys(EMPTY_LIST);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys, method) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records, {\n      type: method\n    });\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]); // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys, 'single');\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }), 'all');\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.') : void 0;\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys, 'invert');\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }), 'none');\n          }\n        };\n      }\n\n      return selection;\n    }).map(function (selection) {\n      return _extends(_extends({}, selection), {\n        onSelect: function onSelect() {\n          var _a2;\n\n          var _a;\n\n          for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n            rest[_key] = arguments[_key];\n          }\n\n          (_a = selection.onSelect) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [selection].concat(rest));\n          setLastSelectedKey(null);\n        }\n      });\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]); // ======================= Columns ========================\n\n  var transformColumns = useCallback(function (columns) {\n    var _a; // >>>>>>>>>>> Skip if not exists `rowSelection`\n\n\n    if (!rowSelection) {\n      process.env.NODE_ENV !== \"production\" ? warning(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.') : void 0;\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    } // >>>>>>>>>>> Support selection\n\n\n    var cloneColumns = _toConsumableArray(columns);\n\n    var keySet = new Set(derivedSelectedKeySet); // Record key only need check with enabled\n\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys, 'all');\n      setLastSelectedKey(null);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections) {\n        var menu = {\n          getPopupContainer: getPopupContainer,\n          items: mergedSelections.map(function (selection, index) {\n            var key = selection.key,\n                text = selection.text,\n                onSelectionClick = selection.onSelect;\n            return {\n              key: key || index,\n              onClick: function onClick() {\n                onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n              },\n              label: text\n            };\n          })\n        };\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: prefixCls + \"-selection-extra\"\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          menu: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return _extends({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: prefixCls + \"-selection\"\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        \"aria-label\": customizeSelections ? 'Custom selection' : 'Select all',\n        skipGroup: true\n      }), customizeSelections);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          process.env.NODE_ENV !== \"production\" ? warning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.') : void 0;\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys, 'multiple');\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              if (checked) {\n                setLastSelectedKey(null);\n              } else {\n                setLastSelectedKey(key);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Insert selection column if not exist\n\n\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n\n        return ((_a = col[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n            _cloneColumns2 = _toArray(_cloneColumns),\n            expandColumn = _cloneColumns2[0],\n            restColumns = _cloneColumns2.slice(1);\n\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat(_toConsumableArray(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));\n      }\n    } // Deduplicate selection column\n\n\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n    process.env.NODE_ENV !== \"production\" ? warning(cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length <= 1, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.') : void 0;\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    }); // Fixed column logic\n\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n\n    if (mergedFixed && prevCol && ((_a = prevCol[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    } // Replace with real selection column\n\n\n    var selectionColumn = _defineProperty({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: prefixCls + \"-selection-column\",\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: prefixCls + \"-selection-col\"\n    });\n\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"names":["_defineProperty","_toArray","_extends","_slicedToArray","_toConsumableArray","_typeof","DownOutlined","INTERNAL_COL_DEFINE","arrAdd","arrDel","conductCheck","convertDataToEntities","useMergedState","React","useCallback","useMemo","useState","Checkbox","Dropdown","Radio","warning","SELECTION_COLUMN","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","EMPTY_LIST","flattenData","data","childrenColumnName","list","forEach","record","push","concat","useSelection","rowSelection","config","_ref","preserveSelectedRowKeys","selectedRowKeys","defaultSelectedRowKeys","getCheckboxProps","onSelectionChange","onChange","onSelect","onSelectAll","onSelectInvert","onSelectNone","onSelectMultiple","selectionColWidth","columnWidth","selectionType","type","selections","fixed","customizeRenderCell","renderCell","hideSelectAll","_ref$checkStrictly","checkStrictly","prefixCls","pageData","getRecordByKey","getRowKey","expandType","tableLocale","locale","getPopupContainer","_useMergedState","value","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","preserveRecordsRef","useRef","Map","updatePreserveRecordsCache","keys","newCache","key","current","has","get","set","useEffect","_useMemo","keyEntities","externalGetKey","childrenPropName","flattedData","checkboxPropsMap","map","index","checkboxProps","process","env","NODE_ENV","isCheckboxDisabled","r","_a","disabled","_useMemo2","_conductCheck","checkedKeys","halfCheckedKeys","_useMemo3","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","slice","Set","derivedHalfSelectedKeySet","_useState","_useState2","lastSelectedKey","setLastSelectedKey","setSelectedKeys","method","availableKeys","records","undefined","triggerSingleSelection","selected","event","rows","k","mergedSelections","selectionList","selection","text","selectionAll","filter","checkProps","selectInvert","keySet","add","Array","from","selectNone","_a2","_len","arguments","length","rest","_key","call","apply","transformColumns","columns","includes","col","cloneColumns","recordKeys","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","items","onSelectionClick","onClick","label","createElement","className","allDisabledData","checked","_ref2","allDisabled","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","indeterminate","skipGroup","_","node","e","stopPropagation","nativeEvent","mergedIndeterminate","_ref5","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_renderCell","findIndex","columnType","_cloneColumns","_cloneColumns2","expandColumn","restColumns","selectionColumnIndex","indexOf","column","prevCol","nextCol","mergedFixed","selectionColumn","width","columnTitle","render"],"sources":["C:/Capstone_Project/testing/src/main/frontend/node_modules/antd/es/table/hooks/useSelection.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport DownOutlined from \"@ant-design/icons/es/icons/DownOutlined\";\nimport { INTERNAL_COL_DEFINE } from 'rc-table';\nimport { arrAdd, arrDel } from \"rc-tree/es/util\";\nimport { conductCheck } from \"rc-tree/es/utils/conductUtil\";\nimport { convertDataToEntities } from \"rc-tree/es/utils/treeUtil\";\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { useCallback, useMemo, useState } from 'react';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Radio from '../../radio';\nimport warning from '../../_util/warning';\n// TODO: warning if use ajax!!!\nexport var SELECTION_COLUMN = {};\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\nvar EMPTY_LIST = [];\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\nexport default function useSelection(rowSelection, config) {\n  var _ref = rowSelection || {},\n    preserveSelectedRowKeys = _ref.preserveSelectedRowKeys,\n    selectedRowKeys = _ref.selectedRowKeys,\n    defaultSelectedRowKeys = _ref.defaultSelectedRowKeys,\n    getCheckboxProps = _ref.getCheckboxProps,\n    onSelectionChange = _ref.onChange,\n    onSelect = _ref.onSelect,\n    onSelectAll = _ref.onSelectAll,\n    onSelectInvert = _ref.onSelectInvert,\n    onSelectNone = _ref.onSelectNone,\n    onSelectMultiple = _ref.onSelectMultiple,\n    selectionColWidth = _ref.columnWidth,\n    selectionType = _ref.type,\n    selections = _ref.selections,\n    fixed = _ref.fixed,\n    customizeRenderCell = _ref.renderCell,\n    hideSelectAll = _ref.hideSelectAll,\n    _ref$checkStrictly = _ref.checkStrictly,\n    checkStrictly = _ref$checkStrictly === void 0 ? true : _ref$checkStrictly;\n  var prefixCls = config.prefixCls,\n    data = config.data,\n    pageData = config.pageData,\n    getRecordByKey = config.getRecordByKey,\n    getRowKey = config.getRowKey,\n    expandType = config.expandType,\n    childrenColumnName = config.childrenColumnName,\n    tableLocale = config.locale,\n    getPopupContainer = config.getPopupContainer;\n  // ========================= Keys =========================\n  var _useMergedState = useMergedState(selectedRowKeys || defaultSelectedRowKeys || EMPTY_LIST, {\n      value: selectedRowKeys\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    mergedSelectedKeys = _useMergedState2[0],\n    setMergedSelectedKeys = _useMergedState2[1];\n  // ======================== Caches ========================\n  var preserveRecordsRef = React.useRef(new Map());\n  var updatePreserveRecordsCache = useCallback(function (keys) {\n    if (preserveSelectedRowKeys) {\n      var newCache = new Map();\n      // Keep key if mark as preserveSelectedRowKeys\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (!record && preserveRecordsRef.current.has(key)) {\n          record = preserveRecordsRef.current.get(key);\n        }\n        newCache.set(key, record);\n      });\n      // Refresh to new cache\n      preserveRecordsRef.current = newCache;\n    }\n  }, [getRecordByKey, preserveSelectedRowKeys]);\n  // Update cache with selectedKeys\n  React.useEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys);\n  }, [mergedSelectedKeys]);\n  var _useMemo = useMemo(function () {\n      return checkStrictly ? {\n        keyEntities: null\n      } : convertDataToEntities(data, {\n        externalGetKey: getRowKey,\n        childrenPropName: childrenColumnName\n      });\n    }, [data, getRowKey, checkStrictly, childrenColumnName]),\n    keyEntities = _useMemo.keyEntities;\n  // Get flatten data\n  var flattedData = useMemo(function () {\n    return flattenData(pageData, childrenColumnName);\n  }, [pageData, childrenColumnName]);\n  // Get all checkbox props\n  var checkboxPropsMap = useMemo(function () {\n    var map = new Map();\n    flattedData.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n      process.env.NODE_ENV !== \"production\" ? warning(!('checked' in checkboxProps || 'defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.') : void 0;\n    });\n    return map;\n  }, [flattedData, getRowKey, getCheckboxProps]);\n  var isCheckboxDisabled = useCallback(function (r) {\n    var _a;\n    return !!((_a = checkboxPropsMap.get(getRowKey(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  }, [checkboxPropsMap, getRowKey]);\n  var _useMemo2 = useMemo(function () {\n      if (checkStrictly) {\n        return [mergedSelectedKeys || [], []];\n      }\n      var _conductCheck = conductCheck(mergedSelectedKeys, true, keyEntities, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n      return [checkedKeys || [], halfCheckedKeys];\n    }, [mergedSelectedKeys, checkStrictly, keyEntities, isCheckboxDisabled]),\n    _useMemo3 = _slicedToArray(_useMemo2, 2),\n    derivedSelectedKeys = _useMemo3[0],\n    derivedHalfSelectedKeys = _useMemo3[1];\n  var derivedSelectedKeySet = useMemo(function () {\n    var keys = selectionType === 'radio' ? derivedSelectedKeys.slice(0, 1) : derivedSelectedKeys;\n    return new Set(keys);\n  }, [derivedSelectedKeys, selectionType]);\n  var derivedHalfSelectedKeySet = useMemo(function () {\n    return selectionType === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys);\n  }, [derivedHalfSelectedKeys, selectionType]);\n  // Save last selected key to enable range selection\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    lastSelectedKey = _useState2[0],\n    setLastSelectedKey = _useState2[1];\n  // Reset if rowSelection reset\n  React.useEffect(function () {\n    if (!rowSelection) {\n      setMergedSelectedKeys(EMPTY_LIST);\n    }\n  }, [!!rowSelection]);\n  var setSelectedKeys = useCallback(function (keys, method) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.current.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records, {\n      type: method\n    });\n  }, [setMergedSelectedKeys, getRecordByKey, onSelectionChange, preserveSelectedRowKeys]);\n  // ====================== Selections ======================\n  // Trigger single `onSelect` event\n  var triggerSingleSelection = useCallback(function (key, selected, keys, event) {\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n    setSelectedKeys(keys, 'single');\n  }, [onSelect, getRecordByKey, setSelectedKeys]);\n  var mergedSelections = useMemo(function () {\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.map(function (record, index) {\n              return getRowKey(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.has(key);\n            }), 'all');\n          }\n        };\n      }\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet);\n            pageData.forEach(function (record, index) {\n              var key = getRowKey(record, index);\n              var checkProps = checkboxPropsMap.get(key);\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet[\"delete\"](key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n            if (onSelectInvert) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.') : void 0;\n              onSelectInvert(keys);\n            }\n            setSelectedKeys(keys, 'invert');\n          }\n        };\n      }\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet).filter(function (key) {\n              var checkProps = checkboxPropsMap.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }), 'none');\n          }\n        };\n      }\n      return selection;\n    }).map(function (selection) {\n      return _extends(_extends({}, selection), {\n        onSelect: function onSelect() {\n          var _a2;\n          var _a;\n          for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n            rest[_key] = arguments[_key];\n          }\n          (_a = selection.onSelect) === null || _a === void 0 ? void 0 : (_a2 = _a).call.apply(_a2, [selection].concat(rest));\n          setLastSelectedKey(null);\n        }\n      });\n    });\n  }, [selections, derivedSelectedKeySet, pageData, getRowKey, onSelectInvert, setSelectedKeys]);\n  // ======================= Columns ========================\n  var transformColumns = useCallback(function (columns) {\n    var _a;\n    // >>>>>>>>>>> Skip if not exists `rowSelection`\n    if (!rowSelection) {\n      process.env.NODE_ENV !== \"production\" ? warning(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.') : void 0;\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    }\n    // >>>>>>>>>>> Support selection\n    var cloneColumns = _toConsumableArray(columns);\n    var keySet = new Set(derivedSelectedKeySet);\n    // Record key only need check with enabled\n    var recordKeys = flattedData.map(getRowKey).filter(function (key) {\n      return !checkboxPropsMap.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet[\"delete\"](key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys, 'all');\n      setLastSelectedKey(null);\n    };\n    // ===================== Render =====================\n    // Title Cell\n    var title;\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n      if (mergedSelections) {\n        var menu = {\n          getPopupContainer: getPopupContainer,\n          items: mergedSelections.map(function (selection, index) {\n            var key = selection.key,\n              text = selection.text,\n              onSelectionClick = selection.onSelect;\n            return {\n              key: key || index,\n              onClick: function onClick() {\n                onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n              },\n              label: text\n            };\n          })\n        };\n        customizeSelections = /*#__PURE__*/React.createElement(\"div\", {\n          className: prefixCls + \"-selection-extra\"\n        }, /*#__PURE__*/React.createElement(Dropdown, {\n          menu: menu,\n          getPopupContainer: getPopupContainer\n        }, /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(DownOutlined, null))));\n      }\n      var allDisabledData = flattedData.map(function (record, index) {\n        var key = getRowKey(record, index);\n        var checkboxProps = checkboxPropsMap.get(key) || {};\n        return _extends({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedData.length;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && /*#__PURE__*/React.createElement(\"div\", {\n        className: prefixCls + \"-selection\"\n      }, /*#__PURE__*/React.createElement(Checkbox, {\n        checked: !allDisabled ? !!flattedData.length && checkedCurrentAll : allDisabledAndChecked,\n        indeterminate: !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        onChange: onSelectAllChange,\n        disabled: flattedData.length === 0 || allDisabled,\n        \"aria-label\": customizeSelections ? 'Custom selection' : 'Select all',\n        skipGroup: true\n      }), customizeSelections);\n    }\n    // Body Cell\n    var renderCell;\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_, record, index) {\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: /*#__PURE__*/React.createElement(Radio, _extends({}, checkboxPropsMap.get(key), {\n            checked: checked,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_, record, index) {\n        var _a;\n        var key = getRowKey(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.has(key);\n        var checkboxProps = checkboxPropsMap.get(key);\n        var mergedIndeterminate;\n        if (expandType === 'nest') {\n          mergedIndeterminate = indeterminate;\n          process.env.NODE_ENV !== \"production\" ? warning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.') : void 0;\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        }\n        // Record checked\n        return {\n          node: /*#__PURE__*/React.createElement(Checkbox, _extends({}, checkboxProps, {\n            indeterminate: mergedIndeterminate,\n            checked: checked,\n            skipGroup: true,\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            },\n            onChange: function onChange(_ref5) {\n              var nativeEvent = _ref5.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1;\n              // Get range of this\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n                  return false;\n                });\n              }\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet[\"delete\"](recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys, 'multiple');\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys;\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                    halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys;\n                  // If remove, we do it again to correction\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet[\"delete\"](key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities, isCheckboxDisabled).checkedKeys;\n                  }\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n              if (checked) {\n                setLastSelectedKey(null);\n              } else {\n                setLastSelectedKey(key);\n              }\n            }\n          })),\n          checked: checked\n        };\n      };\n    }\n    var renderSelectionCell = function renderSelectionCell(_, record, index) {\n      var _renderCell = renderCell(_, record, index),\n        node = _renderCell.node,\n        checked = _renderCell.checked;\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n      return node;\n    };\n    // Insert selection column if not exist\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n        return ((_a = col[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n          _cloneColumns2 = _toArray(_cloneColumns),\n          expandColumn = _cloneColumns2[0],\n          restColumns = _cloneColumns2.slice(1);\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat(_toConsumableArray(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));\n      }\n    }\n    // Deduplicate selection column\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n    process.env.NODE_ENV !== \"production\" ? warning(cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length <= 1, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.') : void 0;\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    });\n    // Fixed column logic\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n    if (mergedFixed && prevCol && ((_a = prevCol[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    }\n    // Replace with real selection column\n    var selectionColumn = _defineProperty({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: prefixCls + \"-selection-column\",\n      title: rowSelection.columnTitle || title,\n      render: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      className: prefixCls + \"-selection-col\"\n    });\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  }, [getRowKey, flattedData, rowSelection, derivedSelectedKeys, derivedSelectedKeySet, derivedHalfSelectedKeySet, selectionColWidth, mergedSelections, expandType, lastSelectedKey, checkboxPropsMap, onSelectMultiple, triggerSingleSelection, isCheckboxDisabled]);\n  return [transformColumns, derivedSelectedKeySet];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}