{"ast":null,"code":"import { tuple } from './type'; // ================== Collapse Motion ==================\n\nvar getCollapsedHeight = function getCollapsedHeight() {\n  return {\n    height: 0,\n    opacity: 0\n  };\n};\n\nvar getRealHeight = function getRealHeight(node) {\n  var scrollHeight = node.scrollHeight;\n  return {\n    height: scrollHeight,\n    opacity: 1\n  };\n};\n\nvar getCurrentHeight = function getCurrentHeight(node) {\n  return {\n    height: node ? node.offsetHeight : 0\n  };\n};\n\nvar skipOpacityTransition = function skipOpacityTransition(_, event) {\n  return (event === null || event === void 0 ? void 0 : event.deadline) === true || event.propertyName === 'height';\n};\n\nvar initCollapseMotion = function initCollapseMotion() {\n  var rootCls = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ant';\n  return {\n    motionName: rootCls + \"-motion-collapse\",\n    onAppearStart: getCollapsedHeight,\n    onEnterStart: getCollapsedHeight,\n    onAppearActive: getRealHeight,\n    onEnterActive: getRealHeight,\n    onLeaveStart: getCurrentHeight,\n    onLeaveActive: getCollapsedHeight,\n    onAppearEnd: skipOpacityTransition,\n    onEnterEnd: skipOpacityTransition,\n    onLeaveEnd: skipOpacityTransition,\n    motionDeadline: 500\n  };\n};\n\nvar SelectPlacements = tuple('bottomLeft', 'bottomRight', 'topLeft', 'topRight');\n\nvar getTransitionDirection = function getTransitionDirection(placement) {\n  if (placement !== undefined && (placement === 'topLeft' || placement === 'topRight')) {\n    return \"slide-down\";\n  }\n\n  return \"slide-up\";\n};\n\nvar getTransitionName = function getTransitionName(rootPrefixCls, motion, transitionName) {\n  if (transitionName !== undefined) {\n    return transitionName;\n  }\n\n  return rootPrefixCls + \"-\" + motion;\n};\n\nexport { getTransitionName, getTransitionDirection };\nexport default initCollapseMotion;","map":{"version":3,"names":["tuple","getCollapsedHeight","height","opacity","getRealHeight","node","scrollHeight","getCurrentHeight","offsetHeight","skipOpacityTransition","_","event","deadline","propertyName","initCollapseMotion","rootCls","arguments","length","undefined","motionName","onAppearStart","onEnterStart","onAppearActive","onEnterActive","onLeaveStart","onLeaveActive","onAppearEnd","onEnterEnd","onLeaveEnd","motionDeadline","SelectPlacements","getTransitionDirection","placement","getTransitionName","rootPrefixCls","motion","transitionName"],"sources":["C:/Capstone_Project/testing/src/main/frontend/node_modules/antd/es/_util/motion.js"],"sourcesContent":["import { tuple } from './type';\n// ================== Collapse Motion ==================\nvar getCollapsedHeight = function getCollapsedHeight() {\n  return {\n    height: 0,\n    opacity: 0\n  };\n};\nvar getRealHeight = function getRealHeight(node) {\n  var scrollHeight = node.scrollHeight;\n  return {\n    height: scrollHeight,\n    opacity: 1\n  };\n};\nvar getCurrentHeight = function getCurrentHeight(node) {\n  return {\n    height: node ? node.offsetHeight : 0\n  };\n};\nvar skipOpacityTransition = function skipOpacityTransition(_, event) {\n  return (event === null || event === void 0 ? void 0 : event.deadline) === true || event.propertyName === 'height';\n};\nvar initCollapseMotion = function initCollapseMotion() {\n  var rootCls = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'ant';\n  return {\n    motionName: rootCls + \"-motion-collapse\",\n    onAppearStart: getCollapsedHeight,\n    onEnterStart: getCollapsedHeight,\n    onAppearActive: getRealHeight,\n    onEnterActive: getRealHeight,\n    onLeaveStart: getCurrentHeight,\n    onLeaveActive: getCollapsedHeight,\n    onAppearEnd: skipOpacityTransition,\n    onEnterEnd: skipOpacityTransition,\n    onLeaveEnd: skipOpacityTransition,\n    motionDeadline: 500\n  };\n};\nvar SelectPlacements = tuple('bottomLeft', 'bottomRight', 'topLeft', 'topRight');\nvar getTransitionDirection = function getTransitionDirection(placement) {\n  if (placement !== undefined && (placement === 'topLeft' || placement === 'topRight')) {\n    return \"slide-down\";\n  }\n  return \"slide-up\";\n};\nvar getTransitionName = function getTransitionName(rootPrefixCls, motion, transitionName) {\n  if (transitionName !== undefined) {\n    return transitionName;\n  }\n  return rootPrefixCls + \"-\" + motion;\n};\nexport { getTransitionName, getTransitionDirection };\nexport default initCollapseMotion;"],"mappings":"AAAA,SAASA,KAAT,QAAsB,QAAtB,C,CACA;;AACA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,GAA8B;EACrD,OAAO;IACLC,MAAM,EAAE,CADH;IAELC,OAAO,EAAE;EAFJ,CAAP;AAID,CALD;;AAMA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;EAC/C,IAAIC,YAAY,GAAGD,IAAI,CAACC,YAAxB;EACA,OAAO;IACLJ,MAAM,EAAEI,YADH;IAELH,OAAO,EAAE;EAFJ,CAAP;AAID,CAND;;AAOA,IAAII,gBAAgB,GAAG,SAASA,gBAAT,CAA0BF,IAA1B,EAAgC;EACrD,OAAO;IACLH,MAAM,EAAEG,IAAI,GAAGA,IAAI,CAACG,YAAR,GAAuB;EAD9B,CAAP;AAGD,CAJD;;AAKA,IAAIC,qBAAqB,GAAG,SAASA,qBAAT,CAA+BC,CAA/B,EAAkCC,KAAlC,EAAyC;EACnE,OAAO,CAACA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqC,KAAK,CAA1C,GAA8CA,KAAK,CAACC,QAArD,MAAmE,IAAnE,IAA2ED,KAAK,CAACE,YAAN,KAAuB,QAAzG;AACD,CAFD;;AAGA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,GAA8B;EACrD,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAAlF;EACA,OAAO;IACLG,UAAU,EAAEJ,OAAO,GAAG,kBADjB;IAELK,aAAa,EAAEnB,kBAFV;IAGLoB,YAAY,EAAEpB,kBAHT;IAILqB,cAAc,EAAElB,aAJX;IAKLmB,aAAa,EAAEnB,aALV;IAMLoB,YAAY,EAAEjB,gBANT;IAOLkB,aAAa,EAAExB,kBAPV;IAQLyB,WAAW,EAAEjB,qBARR;IASLkB,UAAU,EAAElB,qBATP;IAULmB,UAAU,EAAEnB,qBAVP;IAWLoB,cAAc,EAAE;EAXX,CAAP;AAaD,CAfD;;AAgBA,IAAIC,gBAAgB,GAAG9B,KAAK,CAAC,YAAD,EAAe,aAAf,EAA8B,SAA9B,EAAyC,UAAzC,CAA5B;;AACA,IAAI+B,sBAAsB,GAAG,SAASA,sBAAT,CAAgCC,SAAhC,EAA2C;EACtE,IAAIA,SAAS,KAAKd,SAAd,KAA4Bc,SAAS,KAAK,SAAd,IAA2BA,SAAS,KAAK,UAArE,CAAJ,EAAsF;IACpF,OAAO,YAAP;EACD;;EACD,OAAO,UAAP;AACD,CALD;;AAMA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,aAA3B,EAA0CC,MAA1C,EAAkDC,cAAlD,EAAkE;EACxF,IAAIA,cAAc,KAAKlB,SAAvB,EAAkC;IAChC,OAAOkB,cAAP;EACD;;EACD,OAAOF,aAAa,GAAG,GAAhB,GAAsBC,MAA7B;AACD,CALD;;AAMA,SAASF,iBAAT,EAA4BF,sBAA5B;AACA,eAAejB,kBAAf"},"metadata":{},"sourceType":"module"}